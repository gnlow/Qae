stack = resw(20)
len = 0

c = readchar()

fun spush(x) {
    stack[len*3] = x
    len = len + 1
}
fun spop() {
    len = len - 1
    stack[len*3]
}

out = resw(20)
olen = 0

fun opush(x) {
    out[olen*3] = x
    olen = olen + 1
}
fun opop() {
    olen = olen - 1
    out[olen*3]
}

fun prec(op) {
    if (op == '+') { 1 }
    if (op == '-') { 1 }
    if (op == '*') { 2 }
}

fun isnum(x) { '0' < x && x < '9' }

while (c != 10) {
    if (isnum(c)) {
        opush(c)
    } else {
        while (len > 0 && prec(stack[(len-1)*3]) >= prec(c) ) {
            opush(spop())
        }
        spush(c)
    }
    c = readchar()
}

while (len > 0) {
    opush(spop())
}

opush(';')

len = 0
i = 0
while (out[i*3] != ';') {
    c = out[i*3]
    printchar(c)

    if (isnum(c)) {
        spush(c - '0')
    } else {
        b = spop()
        a = spop()
        if (c == '+') { spush(a + b) }
        if (c == '-') { spush(a - b) }
        if (c == '*') { spush(a * b) }
    }

    i = i + 1
}

fun printnum(n) {
    if (n / 100 > 0) {
        printchar(n / 100 + '0')
    }
    n = n - n / 100 * 100
    if (n / 10 > 0) {
        printchar(n / 10 + '0')
    }
    n = n - n / 10 * 10
    printchar(n + '0')
}

printchar(10)
printnum(spop())
